diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/iTerm2.xcodeproj/project.pbxproj iTerm2-patched/iTerm2.xcodeproj/project.pbxproj
*** iTerm2/iTerm2.xcodeproj/project.pbxproj	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/iTerm2.xcodeproj/project.pbxproj	2018-09-06 22:48:44.000000000 +1000
***************
*** 9004,9010 ****
  						DevelopmentTeam = H7V7XYVQ7D;
  					};
  					874206460564169600CFC3F1 = {
! 						ProvisioningStyle = Manual;
  						SystemCapabilities = {
  							com.apple.HardenedRuntime = {
  								enabled = 0;
--- 9004,9011 ----
  						DevelopmentTeam = H7V7XYVQ7D;
  					};
  					874206460564169600CFC3F1 = {
! 						DevelopmentTeam = 4688J3MK2P;
! 						ProvisioningStyle = Automatic;
  						SystemCapabilities = {
  							com.apple.HardenedRuntime = {
  								enabled = 0;
***************
*** 11200,11210 ****
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "-";
! 				CODE_SIGN_STYLE = Manual;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = "";
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
--- 11201,11211 ----
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "Mac Developer";
! 				CODE_SIGN_STYLE = Automatic;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
***************
*** 11339,11345 ****
  				CODE_SIGN_IDENTITY = "Mac Developer";
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = H7V7XYVQ7D;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
  					"$(SRCROOT)",
--- 11340,11346 ----
  				CODE_SIGN_IDENTITY = "Mac Developer";
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
  					"$(SRCROOT)",
***************
*** 11830,11840 ****
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "-";
! 				CODE_SIGN_STYLE = Manual;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = "";
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
--- 11831,11841 ----
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "Mac Developer";
! 				CODE_SIGN_STYLE = Automatic;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
***************
*** 12005,12011 ****
  				CODE_SIGN_IDENTITY = "Mac Developer";
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = H7V7XYVQ7D;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
  					"$(SRCROOT)",
--- 12006,12012 ----
  				CODE_SIGN_IDENTITY = "Mac Developer";
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
  					"$(SRCROOT)",
***************
*** 12870,12881 ****
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "-";
! 				CODE_SIGN_STYLE = Manual;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = NO;
  				DEBUG_INFORMATION_FORMAT = dwarf;
! 				DEVELOPMENT_TEAM = "";
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
--- 12871,12882 ----
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "Mac Developer";
! 				CODE_SIGN_STYLE = Automatic;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = NO;
  				DEBUG_INFORMATION_FORMAT = dwarf;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
***************
*** 12946,12956 ****
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "-";
! 				CODE_SIGN_STYLE = Manual;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = "";
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
--- 12947,12957 ----
  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  				CLANG_ENABLE_OBJC_WEAK = YES;
  				CLANG_WARN_INT_CONVERSION = YES;
! 				CODE_SIGN_IDENTITY = "Mac Developer";
! 				CODE_SIGN_STYLE = Automatic;
  				COMBINE_HIDPI_IMAGES = YES;
  				COPY_PHASE_STRIP = YES;
! 				DEVELOPMENT_TEAM = 4688J3MK2P;
  				ENABLE_HARDENED_RUNTIME = NO;
  				FRAMEWORK_SEARCH_PATHS = (
  					"$(inherited)",
Binary files iTerm2/iTerm2.xcodeproj/project.xcworkspace/xcuserdata/jason.xcuserdatad/UserInterfaceState.xcuserstate and iTerm2-patched/iTerm2.xcodeproj/project.xcworkspace/xcuserdata/jason.xcuserdatad/UserInterfaceState.xcuserstate differ
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/iTerm2.xcodeproj/xcuserdata/jason.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist iTerm2-patched/iTerm2.xcodeproj/xcuserdata/jason.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist
*** iTerm2/iTerm2.xcodeproj/xcuserdata/jason.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist	1970-01-01 10:00:00.000000000 +1000
--- iTerm2-patched/iTerm2.xcodeproj/xcuserdata/jason.xcuserdatad/xcdebugger/Breakpoints_v2.xcbkptlist	2018-09-27 14:38:02.000000000 +1000
***************
*** 0 ****
--- 1,5 ----
+ <?xml version="1.0" encoding="UTF-8"?>
+ <Bucket
+    type = "1"
+    version = "2.0">
+ </Bucket>
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/PTYTextView.m iTerm2-patched/sources/PTYTextView.m
*** iTerm2/sources/PTYTextView.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/PTYTextView.m	2018-09-06 22:10:26.000000000 +1000
***************
*** 2563,2569 ****
  
  - (void)_openTargetWithEvent:(NSEvent *)event inBackground:(BOOL)openInBackground {
      // Command click in place.
!     NSPoint clickPoint = [self clickPoint:event allowRightMarginOverflow:NO];
      int x = clickPoint.x;
      int y = clickPoint.y;
      iTermTextExtractor *extractor = [iTermTextExtractor textExtractorWithDataSource:_dataSource];
--- 2563,2569 ----
  
  - (void)_openTargetWithEvent:(NSEvent *)event inBackground:(BOOL)openInBackground {
      // Command click in place.
!     NSPoint clickPoint = [self clickPoint:event allowRightMarginOverflow:YES]; // PATCH: (Modified) fix URL command click?
      int x = clickPoint.x;
      int y = clickPoint.y;
      iTermTextExtractor *extractor = [iTermTextExtractor textExtractorWithDataSource:_dataSource];
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/PseudoTerminal.m iTerm2-patched/sources/PseudoTerminal.m
*** iTerm2/sources/PseudoTerminal.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/PseudoTerminal.m	2018-09-28 13:21:30.000000000 +1000
***************
*** 393,403 ****
  
  + (void)updateDecorationsOfWindow:(NSWindow *)myWindow forType:(iTermWindowType)windowType {
      const BOOL isCompact = (windowType == WINDOW_TYPE_COMPACT);
!     [myWindow setHasShadow:(windowType == WINDOW_TYPE_NORMAL ||
!                             isCompact)];
      // Chrome doesn't change titleVisibility so neither do we.
      // Some truly dreadful hacks are used instead. See PTYWindow.m.
!     myWindow.titlebarAppearsTransparent = isCompact;
  }
  
  + (NSInteger)styleMaskForWindowType:(iTermWindowType)windowType
--- 393,403 ----
  
  + (void)updateDecorationsOfWindow:(NSWindow *)myWindow forType:(iTermWindowType)windowType {
      const BOOL isCompact = (windowType == WINDOW_TYPE_COMPACT);
!     [myWindow setHasShadow:YES]; // PATCH: (Modified) Native macOS window shadow
      // Chrome doesn't change titleVisibility so neither do we.
      // Some truly dreadful hacks are used instead. See PTYWindow.m.
!     myWindow.titlebarAppearsTransparent = YES; // PATCH: (Modified) Hides title bar strip
!     //myWindow.titleVisibility = NSWindowTitleHidden; // PATCH: (Added) Hides window title
  }
  
  + (NSInteger)styleMaskForWindowType:(iTermWindowType)windowType
***************
*** 406,411 ****
--- 406,412 ----
      if (hotkeyWindowType == iTermHotkeyWindowTypeFloatingPanel) {
          mask = NSWindowStyleMaskNonactivatingPanel;
      }
+     //mask = NSFullSizeContentViewWindowMask; // PATCH: (Added) Make content view utilise entire window
      switch (windowType) {
          case WINDOW_TYPE_TOP:
          case WINDOW_TYPE_BOTTOM:
***************
*** 1726,1740 ****
  - (void)setWindowTitle {
      if (self.isShowingTransientTitle) {
          PTYSession *session = self.currentSession;
          NSString *aTitle;
!         if (self.window.frame.size.width < 250) {
!             aTitle = [NSString stringWithFormat:@"%d✕%d", session.columns, session.rows];
!         } else {
!             aTitle = [NSString stringWithFormat:@"%@ \u2014 %d✕%d",
!                       [self undecoratedWindowTitle],
!                       [session columns],
!                       [session rows]];
!         }
          [self setWindowTitle:aTitle];
      } else {
          [self setWindowTitle:[self undecoratedWindowTitle]];
--- 1727,1735 ----
  - (void)setWindowTitle {
      if (self.isShowingTransientTitle) {
          PTYSession *session = self.currentSession;
+         // PATCH: (Modified) just show window dimensions while resizing
          NSString *aTitle;
!         aTitle = [NSString stringWithFormat:@"%d✕%d", session.columns, session.rows];
          [self setWindowTitle:aTitle];
      } else {
          [self setWindowTitle:[self undecoratedWindowTitle]];
***************
*** 4750,4756 ****
  }
  
  - (void)didDonateTab:(PTYTab *)aTab toWindowController:(PseudoTerminal *)term {
!     if ([term numberOfTabs] == 1) {
          [term fitWindowToTabs];
      } else {
          [term fitTabToWindow:aTab];
--- 4745,4751 ----
  }
  
  - (void)didDonateTab:(PTYTab *)aTab toWindowController:(PseudoTerminal *)term {
!     if (YES) { // PATCH: (Modified) Prevents title bar from showing
          [term fitWindowToTabs];
      } else {
          [term fitTabToWindow:aTab];
***************
*** 5304,5312 ****
          [_contentView.tabBarControl setTabColor:color forTabViewItem:tabViewItem];
          if ([_contentView.tabView selectedTabViewItem] == tabViewItem) {
              NSColor* newTabColor = [_contentView.tabBarControl tabColorForTabViewItem:tabViewItem];
!             if ([_contentView.tabView numberOfTabViewItems] == 1 &&
!                 [iTermPreferences boolForKey:kPreferenceKeyHideTabBar] &&
!                 newTabColor) {
                  [self setBackgroundColor:newTabColor];
  
                  [_contentView setColor:newTabColor];
--- 5299,5308 ----
          [_contentView.tabBarControl setTabColor:color forTabViewItem:tabViewItem];
          if ([_contentView.tabView selectedTabViewItem] == tabViewItem) {
              NSColor* newTabColor = [_contentView.tabBarControl tabColorForTabViewItem:tabViewItem];
!             if (YES) { // PATCH: (Modified) always use the tab color
!                 // PATCH: (Added) set window title background so it renders properly
!                 NSTextView *titleView = [self.contentView.window standardWindowButton:NSWindowCloseButton].superview.subviews[3];
!                 titleView.backgroundColor = [aSession.colorMap colorForKey:kColorMapBackground];
                  [self setBackgroundColor:newTabColor];
  
                  [_contentView setColor:newTabColor];
***************
*** 5349,5355 ****
      // But there's a bug that the window title shows a broken vibrancy effect (issue 6964).
      // There's an opportunity for improvement here if there's a tab color and we know the
      // window isn't opaque we could set the titlebar's color, since that works again in 10.14.
!     self.window.backgroundColor = [NSColor clearColor];
  }
  
  - (void)setLegacyBackgroundColor:(nullable NSColor *)backgroundColor {
--- 5345,5354 ----
      // But there's a bug that the window title shows a broken vibrancy effect (issue 6964).
      // There's an opportunity for improvement here if there's a tab color and we know the
      // window isn't opaque we could set the titlebar's color, since that works again in 10.14.
!     // PATCH: (Modified) set window background color so our transparent title bar doesn't show behind the window
!     backgroundColor = [self.currentSession.colorMap colorForKey:kColorMapBackground];
! 
!     self.window.backgroundColor = backgroundColor;
  }
  
  - (void)setLegacyBackgroundColor:(nullable NSColor *)backgroundColor {
***************
*** 5369,5374 ****
--- 5368,5377 ----
                  break;
          }
      }
+     
+     // PATCH: (Added) set window background color to terminal background color
+     backgroundColor = [self.currentSession.colorMap colorForKey:kColorMapBackground];
+     
      [self.window setBackgroundColor:backgroundColor];
      if (backgroundColor != nil && backgroundColor.perceivedBrightness < 0.5) {
          self.window.appearance = [NSAppearance appearanceNamed:NSAppearanceNameVibrantDark];
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermAdvancedSettingsModel.h iTerm2-patched/sources/iTermAdvancedSettingsModel.h
*** iTerm2/sources/iTermAdvancedSettingsModel.h	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermAdvancedSettingsModel.h	2018-09-06 22:10:26.000000000 +1000
***************
*** 41,46 ****
--- 41,53 ----
  + (BOOL)pinchToChangeFontSizeDisabled;
  + (BOOL)doNotSetCtype;
  
+ // PATCH: (Added) iTerm2-borderless Features
+ + (double)timeBeforeBlinks;
+ + (BOOL)setCursorForegroundColor;
+ + (NSString *)windowTitleFormat;
+ + (int)standardWindowButtonsHorizontalOffset;
+ + (int)standardWindowButtonsVerticalOffset;
+ 
  // The cursor's background goes to the "most different" color from its neighbors if the difference
  // in brightness between the proposed background color and the neighbors' background color is less
  // than this threshold.
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermAdvancedSettingsModel.m iTerm2-patched/sources/iTermAdvancedSettingsModel.m
*** iTerm2/sources/iTermAdvancedSettingsModel.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermAdvancedSettingsModel.m	2018-09-06 22:10:26.000000000 +1000
***************
*** 156,161 ****
--- 156,169 ----
  //   `-----'  :      :
  DEFINE_FLOAT(fractionOfCharacterSelectingNextNeighbor, 0.35, @"Mouse: Fraction of character’s width on its right side that can be used to select the character to its right.");
  
+ // PATCH: (Added) iTerm2-borderless Features
+ #pragma mark iTerm2-borderless Preferences
+ DEFINE_FLOAT(timeBeforeBlinks, 0.5, @"iTerm2-borderless Features: Duration before cursor starts blinking.");
+ DEFINE_BOOL(setCursorForegroundColor, YES, @"iTerm2-borderless Features: Set cursor foreground color.");
+ DEFINE_STRING(windowTitleFormat, @"%@", @"iTerm2-borderless Features: Window title format\n“%@” represents the current session name, e.g. 'Terminal - %@'")
+ DEFINE_INT(standardWindowButtonsHorizontalOffset, 17, @"iTerm2-borderless Features: Standard window buttons horizontal offset")
+ DEFINE_INT(standardWindowButtonsVerticalOffset, 8, @"iTerm2-borderless Features: Standard window buttons vertical offset")
+ 
  #pragma mark Terminal
  DEFINE_BOOL(traditionalVisualBell, NO, @"Terminal: Visual bell flashes the whole screen, not just a bell icon.");
  DEFINE_FLOAT(timeBetweenBlinks, 0.5, @"Terminal: Cursor blink speed (seconds).");
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermCursor.m iTerm2-patched/sources/iTermCursor.m
*** iTerm2/sources/iTermCursor.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermCursor.m	2018-09-06 22:10:26.000000000 +1000
***************
*** 209,217 ****
                                       coord:coord];
          } else {
              // Non-smart
              [self.delegate cursorDrawCharacterAt:coord
                                       doubleWidth:doubleWidth
!                                    overrideColor:foregroundColor
                                           context:ctx
                                   backgroundColor:backgroundColor];
          }
--- 209,218 ----
                                       coord:coord];
          } else {
              // Non-smart
+             // PATCH: (Modified) Set cursor foreground color
              [self.delegate cursorDrawCharacterAt:coord
                                       doubleWidth:doubleWidth
!                                    overrideColor:[iTermAdvancedSettingsModel setCursorForegroundColor] == YES ? foregroundColor : nil
                                           context:ctx
                                   backgroundColor:backgroundColor];
          }
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermTabBarControlView.m iTerm2-patched/sources/iTermTabBarControlView.m
*** iTerm2/sources/iTermTabBarControlView.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermTabBarControlView.m	2018-09-07 21:11:14.000000000 +1000
***************
*** 13,19 ****
  #import "NSObject+iTerm.h"
  #import "NSView+iTerm.h"
  
! CGFloat iTermTabBarControlViewDefaultHeight = 24;
  
  @interface NSView (Private)
  - (NSRect)_opaqueRectForWindowMoveWhenInTitlebar;
--- 13,19 ----
  #import "NSObject+iTerm.h"
  #import "NSView+iTerm.h"
  
! CGFloat iTermTabBarControlViewDefaultHeight = 0; // PATCH: (Modified) hide tab bar
  
  @interface NSView (Private)
  - (NSRect)_opaqueRectForWindowMoveWhenInTitlebar;
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermTextDrawingHelper.m iTerm2-patched/sources/iTermTextDrawingHelper.m
*** iTerm2/sources/iTermTextDrawingHelper.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermTextDrawingHelper.m	2018-09-06 22:10:26.000000000 +1000
***************
*** 2566,2575 ****
  }
  
  - (BOOL)shouldShowCursor {
      if (_cursorBlinking &&
          self.isInKeyWindow &&
          _textViewIsActiveSession &&
!         [NSDate timeIntervalSinceReferenceDate] - _lastTimeCursorMoved > 0.5) {
          // Allow the cursor to blink if it is configured, the window is key, this session is active
          // in the tab, and the cursor has not moved for half a second.
          return _blinkingItemsVisible;
--- 2566,2576 ----
  }
  
  - (BOOL)shouldShowCursor {
+     // PATCH: (Modified) Blink delay after moving the cursor
      if (_cursorBlinking &&
          self.isInKeyWindow &&
          _textViewIsActiveSession &&
!         [NSDate timeIntervalSinceReferenceDate] - _lastTimeCursorMoved > [iTermAdvancedSettingsModel timeBeforeBlinks]) {
          // Allow the cursor to blink if it is configured, the window is key, this session is active
          // in the tab, and the cursor has not moved for half a second.
          return _blinkingItemsVisible;
diff --exclude=.git -x '*.orig' -x '*.rej' -x build -Prc iTerm2/sources/iTermWindowImpl.m iTerm2-patched/sources/iTermWindowImpl.m
*** iTerm2/sources/iTermWindowImpl.m	2018-09-06 22:02:26.000000000 +1000
--- iTerm2-patched/sources/iTermWindowImpl.m	2018-09-06 22:43:23.000000000 +1000
***************
*** 28,33 ****
--- 28,35 ----
      double _cachedTotalOcclusion;
  
      NSTimeInterval _timeOfLastWindowTitleChange;
+     
+     NSTextView *titleView;
  }
  
  - (instancetype)initWithContentRect:(NSRect)contentRect
***************
*** 44,49 ****
--- 46,52 ----
          DLog(@"Invalidate cached occlusion: %@ %p", NSStringFromSelector(_cmd), self);
          [[iTermWindowOcclusionChangeMonitor sharedInstance] invalidateCachedOcclusion];
      }
+ 
      return self;
  }
  
***************
*** 57,69 ****
  
  }
  
  - (BOOL)titleChangedRecently {
      NSTimeInterval now = [NSDate timeIntervalSinceReferenceDate];
      return (now > _timeOfLastWindowTitleChange && now - _timeOfLastWindowTitleChange < iTermWindowTitleChangeMinimumInterval);
  }
  
  - (void)setTitle:(NSString *)title {
!     [super setTitle:title];
      _timeOfLastWindowTitleChange = [NSDate timeIntervalSinceReferenceDate];
  }
  
--- 60,106 ----
  
  }
  
+ // PATCH: (Added) Modify standard title bar
+ - (void)layoutIfNeeded {
+     NSButton *closeButton = [self.contentView.window standardWindowButton:NSWindowCloseButton];
+     NSButton *miniaturizeButton = [self.contentView.window standardWindowButton:NSWindowMiniaturizeButton];
+     NSButton *fullscreenButton = [self.contentView.window standardWindowButton:NSWindowZoomButton];
+     
+     int horizOff = [iTermAdvancedSettingsModel standardWindowButtonsHorizontalOffset];
+     int vertOff = [iTermAdvancedSettingsModel standardWindowButtonsVerticalOffset];
+     
+     [closeButton setFrameOrigin:NSMakePoint(0 + horizOff, 3)];
+     [miniaturizeButton setFrameOrigin:NSMakePoint(20 + horizOff, 3)];
+     [fullscreenButton setFrameOrigin:NSMakePoint(40 + horizOff, 3)];
+     
+     NSView *lights = closeButton.superview.superview;
+     NSRect newFrame = lights.frame;
+     newFrame.origin.y = self.contentView.frame.size.height - vertOff;
+     lights.frame = newFrame;
+     
+     NSTextView *titleView = closeButton.superview.subviews[3];
+     
+     NSView *decorationView = closeButton.superview.superview.subviews[1];
+     decorationView.layer.opacity = 0.0;
+     
+     titleView.font = [NSFont systemFontOfSize:13];
+     [titleView removeConstraints:titleView.constraints];
+     CGRect frame = titleView.frame;
+     frame.size.width = 200;
+     frame.origin.y = 3;
+     titleView.frame = frame;
+     titleView.drawsBackground = true;
+     
+     [super layoutIfNeeded];
+ }
+ 
  - (BOOL)titleChangedRecently {
      NSTimeInterval now = [NSDate timeIntervalSinceReferenceDate];
      return (now > _timeOfLastWindowTitleChange && now - _timeOfLastWindowTitleChange < iTermWindowTitleChangeMinimumInterval);
  }
  
  - (void)setTitle:(NSString *)title {
!     [super setTitle:title]; // PATCH: (Modified) Change window title to "Terminal"
      _timeOfLastWindowTitleChange = [NSDate timeIntervalSinceReferenceDate];
  }
  
Only in iTerm2/tests: colors.sh
